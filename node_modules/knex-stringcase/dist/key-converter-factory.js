"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = keyConverterFactory;
function keyConverterFactory(converter, isRecursive) {
    return function keyConverter(value, path, queryContext) {
        if (isStatic(value, path, isRecursive, queryContext)) {
            return value;
        }
        if (Array.isArray(value)) {
            return value.map(item => keyConverter(item, path, queryContext));
        }
        const input = value;
        const output = {};
        for (const key of Object.keys(input)) {
            const newKey = converter(key);
            output[newKey] = keyConverter(input[key], `${path}.${key}`, queryContext);
        }
        return output;
    };
}
function isStatic(value, path, isRecursive, queryContext) {
    if (typeof value !== 'object' || value === null)
        return true;
    if (value instanceof Date)
        return true;
    if (path === 'root')
        return false;
    if (typeof isRecursive === 'function')
        return !isRecursive(value, path, queryContext);
    return true;
}
